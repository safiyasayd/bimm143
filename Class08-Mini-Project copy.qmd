---
title: "Class 8: Mini-Project"
author: "Safiya Sayd (PID:A18027139)"
date: 02/06/2025
format: pdf
---

##1. Exploratory data analysis
Data downloaded onto R session

```{r}
fna.data <- "WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```

Removing the diagnosis column because it is the "answer"

```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

New vector with diagnosis data

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
diagnosis
```

>Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

> Q2. How many of the observations have a malignant diagnosis?

```{r}
sum(wisc.df$diagnosis == "M")
```

> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
mean_feature <- grep("_mean$", colnames(wisc.data), value = T)
length(mean_feature)
```

##Performing PCA

Checking standard deviation and mean to see if data should be scaled 
```{r}
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
wisc.pr <- prcomp(wisc.data, scale= T)
summary(wisc.pr)
```


> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

PC1 captures 0.4427 of variance 

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3 principal components are required to explain at least 70% of the total variance. (This was found using visualization of Cumulative Proportion). 

Also found 
```{r}
cumulative_pca <-
#summary(wisc.pr)$importance[2, ] finds the proportion of variance explained for each pc
  #cumsum() finds the cumulative variance with more pc added
  cumsum(summary(wisc.pr)$importance[2, ])
#which evaluates logical vectors that are TRUE
which(cumulative_pca >= 0.70)[1]
```

> Q6. Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
which(cumulative_pca >= 0.90)[1]
```


Interpreting PCA results
```{r}
biplot(wisc.pr)
```

> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

This data is hard to read because the data points are crowded with names in a small plot. It is difficult to understand what the data is conveying. 

Generating a plot of pc 1 vs. pc 2

```{r}
names(wisc.pr)
# x is used to transform data into new space
```


```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis, 
     xlab = "PC1", ylab = "PC2")
```

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```
The scatterplot of PC1 vs. PC2 captures most of the variation with PC1 clearly distinguishing between the data points divergence. While PC1 vs. PC3 is unclear with values overlapping malignant points and benign points. PC3's contribution leads to less differentiation between the two groups. 

Using ggplot to make a fancy figures of results. First principal component scores must be converted into a data frame format in order for it to be used in ggplot
```{r}
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
```

```{r}
library(ggplot2)
```

```{r}
ggplot(df) +
    aes(PC1, PC2, col=diagnosis) +
      geom_point()
```

```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
pve <- pr.var / sum(pr.var)
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

Loading tells us how each original variable contributes to a pc
```{r}
#wisc.pr$rotation contains loading values higher absolute value indicates more importance to pc
wisc.pr$rotation["concave.points_mean",1]
```

concave.points_mean seems to have a low contribution to PC1. The negative value indicates it contributes to information of malignant tumor


```{r}
tapply(wisc.pr$x[,1], diagnosis, mean)
```

M being negative corresponds to negative loading value 

> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
which(cumulative_pca >= 0.80)[1]
```

##3. Hierarchical clustering

```{r}
data.scaled <- scale(wisc.data)
```

Calculating Euclidean distance 
```{r}
data.dist <- dist(data.scaled)
head(data.dist)
```

hierarchical clustering model 
```{r}
wisc.hclust <- hclust(data.dist, method= "complete")
```

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

18.63658


```{r}
plot(wisc.hclust)
#wisc.hclust$height has the heights at which clusters are merged
#Hierarchical clustering has n-1 merges using the value three picks the 4th last merge on the list, length(wisc.hclust$height)-3
cut_height <- wisc.hclust$height[length(wisc.hclust$height)-3]
cut_height
```

```{r}
plot(wisc.hclust)
abline(h = 18.63658, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

Choosing the k value where separation between M and B is best. Clusters should be mostly either M or B. k = 8 best represents this distinction between the two. 

```{r}
clusters <- cutree(wisc.hclust, k=8)
table(clusters, diagnosis)
```

> Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

The Ward's method gives the best result, it shows more balanced and distinct clusters. It separates the B and M diagnoses more and its clear that there are two different groups. 

```{r}
wisc.hclust.complete <- hclust(data.dist, method= "complete")
plot(wisc.hclust.complete)
abline(h = 18.63658, col="red", lty=2)
```

```{r}
wisc.hclust.single <- hclust(data.dist, method= "single")
plot(wisc.hclust.single)
abline(h = 18.63658, col="red", lty=2)
```

```{r}
wisc.hclust.average <- hclust(data.dist, method= "average")
plot(wisc.hclust.average)
abline(h = 18.63658, col="red", lty=2)
```

```{r}
wisc.pr.hclust <- hclust(data.dist, method= "ward.D2")
plot(wisc.pr.hclust)
abline(h = 18.63658, col="red", lty=2)
```

##5. Combining methods

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method="ward.D2")
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=4)
```


> Q15. How well does the newly created model with four clusters separate out the two diagnoses?

The 4 clusters shows improvement compared to the 2-cluster model. The separation is not perfect with some clusters still containing both B and M. 

```{r}
table(wisc.pr.hclust.clusters, diagnosis)
```

> Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

K-means clustering has done a relatively good job of separating benign and malignant diagnoses, with fer misclassifications compared to hierarchical clustering. Hierarchical clustering, with the four clusters was more granular but still has misclassifications. 

##6. Sensitivity/Specificity

> Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

THE PCA-based hierarchical model was better at detecting cancerous tumors, witht he non-pca hierarchical model excelled at identifying health tumors

##7. Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q18. Which of these new patients should we prioritize for follow up based on your results?

It would best to prioritize patients who have a M tumor. It seems as the patient number two corresponds to a M tumor and should be followed up on. 
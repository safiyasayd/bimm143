---
title: "Class10 : Structural Bioinformatics (Pt. 1)"
author: "Safiya Sayd (PID: A18027139)"
date: 02/ 06/ 2025
format: pdf
prefer-html: true
toc: True
---

## 1. PDB database

The main repository of biomolecular structior data is called the pdb found at: https://www.rcsb.org/

Let's see what this database contains. PDB analyze >PDB statistics > by Experimental Method and Molecular Type

```{r}
pdbstats <- read.csv("Data Export Summary.csv")
pdbstats
```


commas result in numerical values being categorized as a character 
```{r}
pdbstats$X.ray
```

This can be fixed by replacing "," for nothing "" with `sub()` function: 

```{r}
x <- pdbstats$X.ray
x_numeric <- as.numeric( gsub(",", "", x))
x_numeric
```

or I can use the **readr** package and the `read_csv()` function 

```{r}
library(readr)
pdbstats <- read_csv("Data Export Summary.csv", show_col_types = FALSE)
pdbstats
```

I want to clean the column names so that they are all lower case and don't have spaces in them

```{r}
colnames(pdbstats)
```

```{r}
library(janitor)

df <- clean_names(pdbstats)
df
```

```{r}
sum(df$x_ray)
```

```{r}
df$total
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy?

93.58566%

Percent of X-ray structures 
```{r}
sum(df$x_ray)/sum(df$total) *100
```

Percent of EM structure 
```{r}
sum(df$em)/sum(df$total) *100
```

>Q2: What proportion of structures in the PDB are protein?

86.23852

```{r}
protein_row <- df[df$molecular_type =="Protein (only)",]
protein_row
```

```{r}
sum(protein_row$total) / sum(df$total) * 100
```

> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

2,298 structures are currently in the pdb. 

## 2. Using mol*

The main mol* homepage: https://molstar.org/viewer/
We can input our own PDB files or just give it a PDB database accession code (4 letter PDB code)

![Molecular View of 1HSG](1HSG.png)

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

This is due to the limitation of detection of water molecules. Hydrogen molecules are harder to detect while oxygen molecules aren't. The one atom shown is oxygen and has a higher accuracy of position. Another reason this is beneficial is it simplifies visualizing the structure. 

> Q5. There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

306

![Conserved Water Molecule](Conservedwatermolecule.png)

> Q6. Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. 

![aspartic acid interaction with ligand](aminoacidresidueinteraction.png)

![Aspartic Acid 25](1HSG (2).png)

![Molecular View of 1HSG](1HSG.png)


## 3. Introduction to Bio3D in R
**Bio3D** can be used to read PDB data in R
```{r}
library(bio3d)

pdb <- read.pdb("1hsg")
pdb
```

> Q7. How many amino acid residues are there in this pdb object? 

```{r}
length( pdbseq(pdb))
```

> Q8. Name one of the two non-protein residues?

MK1 

> 9. How many protein chains are in this structure? 

2 chains, A and B

Looking in more detail of `pdb`

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

new function in Bio3D 
install.packages("r3dmol") and install.packages("shiny")

```{r}
source("https://tinyurl.com/viewpdb")
view.pdb(pdb, backgroundColor = "pink")
```

## 4. predicting functional dynamics

We can use the `nma()` function in bio3d to predict the large-scale functional motions of biomolecules 

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
m <- nma(adk)
plot(m)
```

Write out a trajectory of the predicted molecular motion:
```{r}
mktrj(m, file="adk_m7.pdb")
```


```{r}
library(bio3d)
aa <- get.seq("1ake_A")
aa
```

```{r}
b <- blast.pdb(aa)
hits <- plot(b)
head(hits$pdb.id)
```

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

```{r}
ids <- basename.pdb(pdbs$id)
```

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
```

```{r}
pc.xray <- pca(pdbs)
plot(pc.xray)
```

```{r}
rd <- rmsd(pdbs)

hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```














